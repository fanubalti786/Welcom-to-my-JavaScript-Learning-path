// âœ… Base Class
class person1 {
    constructor() {
        console.log("person");
    }

    eat() {
        console.log("eat");
    }

    sleep() {
        console.log("sleep");
    }
}

// âœ… Inherits from person1
class engineer1 extends person1 {
    constructor(val) {
        super(); // ðŸ”— Calls person1's constructor
        console.log("engineer");
    }

    work() {
        console.log("engineer work");
    }

    software() {
        console.log("engineer");
    }
}

// âœ… Inherits from engineer1 (No override now)
class doctore1 extends engineer1 {
    constructor(val) {
        super(val); // ðŸ”— Calls engineer1's constructor
        console.log("doctore");
    }

    doctorWork() {
        console.log("doctore work");
    }

    patient() {
        console.log("doctore");
    }
}

// âœ… Inherits from doctore1
class pilote1 extends doctore1 {
    constructor(val) {
        console.log("pilote");
        super(val); // ðŸ”— Calls doctore1's constructor â†’ engineer1 â†’ person1
    }

    aeroplane() {
        console.log("pilote");
    }
}

// âœ… Create object of the last subclass
let irfan2 = new pilote1(55);

// ðŸ§ª Method Calls â€” No overriding involved
irfan2.work();         // âœ… From engineer1
irfan2.aeroplane();    // âœ… From pilote1
irfan2.eat();          // âœ… From person1
irfan2.patient();      // âœ… From doctore1
irfan2.software();     // âœ… From engineer1
irfan2.doctorWork();   // âœ… Now unique method name (no override)
